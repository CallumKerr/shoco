#ifdef _SHOCO_INTERNAL
/*
This file was generated by 'generate_successor_table.py',
so don't edit this by hand. Also, do not include this file
anywhere. It is internal to 'shoco.c'. Include 'shoco.h'
if you want to use shoco in your project.
*/

static const char chrs[32] = {
  '/', 'e', 's', 'r', 'o', 'i', 't', 'a', 'c', 'n', 'm', 'l', 'h', '.', 'u', 'd', 'b', 'g', 'p', '-', 'f', '2', 'k', '0', '_', '1', '3', '4', 'v', 'x', '6', '8'
};

static const int successors_indices[32][16] = {
  {2, 8, 12, 17, 6, 14, 11, 18, -1, 15, 5, 13, 10, 20, -1, 7},
  {0, 3, 2, 16, 29, 11, 9, 8, 19, 6, 15, 10, 7, 13, 24, 18},
  {6, 0, 3, 4, 12, 1, 2, 19, 13, 5, 8, -1, 18, 14, 22, 28},
  {5, 1, 8, 0, 4, 7, 6, 28, 2, 10, 13, 14, 9, 19, 15, 11},
  {10, 14, 9, 3, 15, 8, 0, 11, 4, 7, 16, 6, 2, -1, 18, 17},
  {2, 7, 16, 9, 6, 8, 11, 28, 4, 15, 17, 10, 18, 3, 0, 1},
  {5, 1, 0, 22, 7, 2, 3, 17, 4, 12, 19, 13, 20, -1, 10, 6},
  {9, 3, 6, 8, 11, 2, 17, 19, 18, 5, 15, 0, 10, 16, 28, 14},
  {12, 1, 4, 0, 7, 6, 22, 11, 21, 8, 3, 18, 2, 13, 14, 16},
  {0, 4, 6, 2, 17, 15, 1, 8, 19, 5, 20, 14, 7, 13, 22, 26},
  {1, 7, 4, 0, 18, 20, 11, 15, 5, 24, 10, 16, 19, 13, 2, 14},
  {5, 1, 7, 4, 0, 14, 11, 2, 18, 15, 19, 6, 13, 22, 28, -1},
  {4, 3, 7, 1, 6, 5, 0, -1, 13, 18, 17, 19, 24, -1, 10, 14},
  {18, 26, 12, 8, -1, 11, 25, 23, 17, 20, 15, 4, 10, 21, -1, 6},
  {3, 2, 10, 9, 11, 6, 15, 18, 5, 17, 16, 20, 0, 29, 1, 7},
  {1, 5, 4, 0, 7, 16, 2, 14, 19, 13, 24, -1, 3, 20, 15, 11},
  {0, 22, -1, 7, 1, 14, 2, -1, 11, 30, 4, -1, -1, 5, 17, 8},
  {9, 6, 1, 5, 0, 3, 2, 11, 4, 12, -1, 13, 14, 19, 15, 16},
  {7, 11, 9, 1, 18, 4, 3, 2, 5, -1, 0, 6, 14, 8, 10, 12},
  {21, 15, 2, 25, 18, 6, 8, 17, 11, 29, 10, 16, 9, 1, 23, 5},
  {4, 5, 8, 19, 1, 10, 0, 7, 20, 3, 15, 16, 2, 13, 31, 21},
  {13, 23, 0, 27, 21, 25, -1, 30, 31, 26, -1, 19, -1, 7, 8, 1},
  {5, 19, 1, 0, 24, 7, 2, 13, 9, -1, 4, 11, 6, 15, -1, 16},
  {13, 0, 23, 19, 25, 24, 21, 26, -1, 27, -1, 30, -1, 31, -1, 7},
  {11, 30, 23, 18, 2, 10, 26, -1, 25, 6, 3, 8, -1, 15, 24, 16},
  {13, 0, 26, 23, 21, 25, 30, -1, 27, -1, 31, -1, 19, 24, 15, 20},
  {13, 0, 21, 23, 25, 24, 26, 27, -1, 31, 30, -1, -1, 19, 7, 15},
  {0, 13, 19, 30, 31, 23, -1, -1, 21, 25, 27, 26, -1, 1, 16, 20},
  {1, 7, 5, 4, 17, 10, 9, 20, 0, 8, 13, 24, 19, 2, 18, 15},
  {11, 10, 31, 0, 6, 19, 21, -1, 7, 13, 1, 18, 27, 25, 24, 26},
  {27, 24, 0, 25, 21, 23, 26, 13, -1, 30, 31, -1, -1, 7, 19, 15},
  {30, 13, 0, 31, -1, 23, 25, -1, 26, 21, 27, -1, 16, 8, 20, 1}
};

static const int chrs_reversed[256] = {
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, 13, 0, 23, 25, 21, 26, 27, -1, 30, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, 7, 16, 8, 15, 1, 20, 17, 12, 5, -1, 22, 11, 10, 9, 4, 18, -1, 3, 2, 6, 14, 28, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static const int successors_reversed[32][32] = {
  {-1, -1, 0, -1, -1, 10, 4, 15, 1, -1, 12, 6, 2, 11, 5, 9, -1, 3, 7, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, 2, 1, -1, -1, 9, 12, 7, 6, 11, 5, -1, 13, -1, 10, 3, -1, 15, 8, -1, -1, -1, -1, 14, -1, -1, -1, -1, 4, -1, -1},
  {1, 5, 6, 2, 3, 9, 0, -1, 10, -1, -1, -1, 4, 8, 13, -1, -1, -1, 12, 7, -1, -1, 14, -1, -1, -1, -1, -1, 15, -1, -1, -1},
  {3, 1, 8, -1, 4, 0, 6, 5, 2, 12, 9, 15, -1, 10, 11, 14, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, 7, -1, -1, -1},
  {6, -1, 12, 3, 8, -1, 11, 9, 5, 2, 0, 7, -1, -1, 1, 4, 10, 15, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {14, 15, 0, 13, 8, -1, 4, 1, 5, 3, 11, 6, -1, -1, -1, 9, 2, 10, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, -1, -1, -1},
  {2, 1, 5, 6, 8, 0, 15, 4, -1, -1, 14, -1, 9, 11, -1, -1, -1, 7, -1, 10, 12, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {11, -1, 5, 1, -1, 9, 2, -1, 3, 0, 12, 4, -1, -1, 15, 10, 13, 6, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1},
  {3, 1, 12, 10, 2, -1, 5, 4, 9, -1, -1, 7, 0, 13, 14, -1, 15, -1, 11, -1, -1, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 6, 3, -1, 1, 9, 2, 12, 7, -1, -1, -1, -1, 13, 11, 5, -1, 4, -1, 8, 10, -1, 14, -1, -1, -1, 15, -1, -1, -1, -1, -1},
  {3, 0, 14, -1, 2, 8, -1, 1, -1, -1, 10, 6, -1, 13, 15, 7, 11, -1, 4, 12, 5, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1},
  {4, 1, 7, -1, 3, 0, 11, 2, -1, -1, -1, 6, -1, 12, 5, 9, -1, -1, 8, 10, -1, -1, 13, -1, -1, -1, -1, -1, 14, -1, -1, -1},
  {6, 3, -1, 1, 0, 5, 4, 2, -1, -1, 14, -1, -1, 8, 15, -1, -1, 10, 9, 11, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, -1, -1, 11, -1, 15, -1, 3, -1, 12, 5, 2, -1, -1, 10, -1, 8, 0, -1, 9, 13, -1, 7, -1, 6, 1, -1, -1, -1, -1, -1},
  {12, 14, 1, 0, -1, 8, 5, 15, -1, 3, 2, 4, -1, -1, -1, 6, 10, 9, 7, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1},
  {3, 0, 6, 12, 2, 1, -1, 4, -1, -1, -1, 15, -1, 9, 7, 14, 5, -1, -1, 8, 13, -1, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1},
  {0, 4, 6, -1, 10, 13, -1, 3, 15, -1, -1, 8, -1, -1, 5, -1, -1, 14, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 9, -1},
  {4, 2, 6, 5, 8, 3, 1, -1, -1, 0, -1, 7, 9, 11, 12, 14, 15, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {10, 3, 7, 6, 5, 8, 11, 0, 13, 2, 14, 1, 15, -1, 12, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, 13, 2, -1, -1, 15, 5, -1, 6, 12, 10, 8, -1, -1, -1, 1, 11, 7, 4, -1, -1, 0, -1, 14, -1, 3, -1, -1, -1, 9, -1, -1},
  {6, 4, 12, 9, 0, 1, -1, 7, 2, -1, 5, -1, -1, 13, -1, 10, 11, -1, -1, 3, 8, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14},
  {2, 15, -1, -1, -1, -1, -1, 13, 14, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, 11, -1, 4, -1, 1, -1, 5, 9, 3, -1, -1, 7, 8},
  {3, 2, 6, -1, 10, 0, 12, 5, -1, 8, -1, 11, -1, 7, -1, 13, 15, -1, -1, 1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1},
  {1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, 3, -1, 6, -1, 2, 5, 4, 7, 9, -1, -1, 11, 13},
  {-1, -1, 4, 10, -1, -1, 9, -1, 11, -1, 5, 0, -1, -1, -1, 13, 15, -1, 3, -1, -1, -1, -1, 2, 14, 8, 6, -1, -1, -1, 1, -1},
  {1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 14, -1, -1, -1, 12, 15, 4, -1, 3, 13, 5, 2, 8, -1, -1, 6, 10},
  {1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, 0, -1, 15, -1, -1, -1, 13, -1, 2, -1, 3, 5, 4, 6, 7, -1, -1, 10, 9},
  {0, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 14, -1, -1, 2, 15, 8, -1, 5, -1, 9, 11, 10, -1, -1, 3, 4},
  {8, 0, 13, -1, 3, 2, -1, 1, 9, 6, 5, -1, -1, 10, -1, 15, -1, 4, 14, 12, 7, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1},
  {3, 10, -1, -1, -1, -1, 4, 8, -1, -1, 1, 0, -1, 9, -1, -1, -1, -1, 11, 5, -1, 6, -1, -1, 14, 13, 15, 12, -1, -1, -1, 2},
  {2, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, 7, -1, 15, -1, -1, -1, 14, -1, 4, -1, 5, 1, 3, 6, 0, -1, -1, 9, 10},
  {2, 15, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, 1, -1, -1, 12, -1, -1, -1, 14, 9, -1, 5, -1, 6, 8, 10, -1, -1, 0, 3}
};


typedef struct Pack {
  uint32_t word;
  unsigned int bytes_packed;
  unsigned int bytes_unpacked;
  unsigned const int offsets[8];
  const int16_t _ALIGNED masks[8];
  char header_mask;
  char header;
} Pack;

#define PACK_COUNT 3
#define MAX_SUCCESSOR_N 8

static const Pack packs[PACK_COUNT] = {
  { 0x80000000, 1, 2, { 26, 24, 24, 24, 24, 24, 24 }, { 15, 3, 0, 0, 0, 0, 0 }, 0xc0, 0x80 },
  { 0xc0000000, 2, 4, { 25, 21, 18, 16, 16, 16, 16 }, { 15, 15, 7, 3, 0, 0, 0 }, 0xe0, 0xc0 },
  { 0xe0000000, 4, 8, { 24, 20, 16, 12, 9, 6, 3, 0 }, { 15, 15, 15, 15, 7, 7, 7, 7 }, 0xf0, 0xe0 }
};

#endif
