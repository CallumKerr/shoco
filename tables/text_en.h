#ifdef _SHOCO_INTERNAL
/*
This file was generated by 'generate_successor_table.py',
so don't edit this by hand. Also, do not include this file
anywhere. It is internal to 'shoco.c'. Include 'shoco.h'
if you want to use shoco in your project.
*/

#ifdef _MSC_VER
  #define ALIGNED __declspec(align(16))
#else
#if defined(__GNUC__)
  #define ALIGNED __attribute__ ((aligned(16)))
#else
  #define ALIGNED
#endif
#endif

static const char chrs[32] = {
  'e', ' ', 't', 'h', 'd', 's', 'i', ',', 'a', 'n', 'o', 'r', 'y', '.', 'v', 'm', 'f', 'l', 'I', 'g', 'w', 'b', 'u', 'c', 'p', 'k', 'T', '"', 'H', '?', 'q', '\''
};

static const char successors[32][16] = {
  {' ', 'r', 'd', 'n', 's', 'a', 'e', 'l', 't', ',', '.', 'c', 'm', 'v', 'y', 'f'},
  {'t', 'a', 'w', 'h', 's', 'o', 'i', 'm', 'b', 'c', 'f', 'I', 'd', 'l', 'p', 'n'},
  {'h', ' ', 'o', 'e', 'i', 'a', 'r', 't', ',', '.', 'l', 's', 'u', 'y', 'w', 'c'},
  {'e', 'a', 'i', ' ', 'o', 't', 'r', 'u', ',', 'y', '.', 'n', 's', 'm', 'l', 'b'},
  {' ', 'e', 'o', 'i', ',', '.', 'a', 'r', 's', 'y', 'l', 'd', 'u', 'g', 'v', 'n'},
  {' ', 't', 'e', 'h', 'i', 'o', 's', 'a', ',', '.', 'u', 'p', 'c', 'm', 'l', 'k'},
  {'n', 's', 't', 'c', 'd', 'l', 'm', 'o', 'r', 'g', 'e', 'v', 'f', 'a', 'b', 'p'},
  {' ', '"', '\'', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad'},
  {'n', 't', 's', 'r', ' ', 'l', 'd', 'i', 'v', 'c', 'y', 'm', 'b', 'p', 'g', 'k'},
  {' ', 'd', 'g', 'e', 't', 'o', 'c', 'i', 's', ',', 'a', '.', 'k', 'y', 'l', 'n'},
  {'u', 'n', ' ', 'r', 'f', 'm', 'w', 't', 'o', 'l', 's', 'p', 'c', 'v', 'k', 'd'},
  {'e', ' ', 'o', 'i', 'a', 's', 'y', 't', '.', 'd', ',', 'n', 'r', 'k', 'u', 'm'},
  {' ', 'o', ',', 'e', '.', 's', 'i', 't', 'l', '?', 'a', '\'', 'm', 'd', 'p', 'w'},
  {' ', '"', '\'', ',', 'o', 'n', 'g', 'H', 't', 'p', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad'},
  {'e', 'i', 'a', 'o', 'y', 'u', 'r', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad'},
  {'e', 'a', ' ', 'y', 'o', 'i', 'p', 'u', '.', 's', ',', 'b', 'm', '?', 'n', 'l'},
  {' ', 'o', 'r', 'a', 'e', 'i', 'f', 't', 'u', 'l', ',', '.', 'y', 's', '?', 'g'},
  {'e', 'l', ' ', 'i', 'a', 'y', 'o', 'd', 'm', 'u', 'f', ',', 's', 't', '.', 'k'},
  {' ', 't', 'n', 'f', '.', '\'', ',', 's', 'I', 'r', 'T', 'm', '"', '?', 'd', '\xad'},
  {' ', 'h', 'e', 'o', 'a', 'r', 'i', 'l', ',', 'u', '.', 's', 'g', 'n', 't', 'y'},
  {'a', 'h', 'i', 'e', 'o', ' ', 'n', ',', 'r', 's', '.', 'l', '?', 'd', 'w', 'y'},
  {'e', 'l', 'u', 'o', 'a', 'r', 'y', 'i', 's', 't', ' ', 'b', 'v', ',', 'm', '.'},
  {'r', 't', 's', 'l', 'n', ' ', 'p', 'g', 'c', 'i', 'e', 'm', 'b', 'a', 'd', '.'},
  {'o', 'h', 'e', 'a', 't', 'k', 'l', 'r', 'i', 'u', 'c', ' ', 'y', ',', 'q', 's'},
  {'e', 'o', 'a', 'r', 'l', ' ', 'p', 'i', 'u', 's', 't', 'h', ',', 'y', '.', 'f'},
  {'e', ' ', 'n', 'i', 's', ',', '.', 'l', 'a', 'f', 'y', '?', 'w', 'o', '\'', 'm'},
  {'h', 'o', 'H', 'u', 'e', 'w', ' ', 'I', 'i', 'r', 'a', ',', '.', '\xad', '\xad', '\xad'},
  {' ', 'I', 'T', '\'', 'H', 't', 'b', 'i', 'a', 'y', 'w', 'h', 'f', 'p', 'm', 'o'},
  {'o', 'e', 'a', 'i', 'u', 'I', ' ', '.', 'T', 'y', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad'},
  {'"', ' ', '\'', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad'},
  {'u', '.', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad', '\xad'},
  {'s', ' ', 't', 'I', 'T', 'c', 'l', 'v', 'y', 'H', 'a', 'd', '"', 'r', 'w', 'm'}
};

static const int chrs_reversed[256] = {
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 27, -1, -1, -1, -1, 31, -1, -1, -1, -1, 7, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, 28, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 21, 23, 4, 0, 16, 19, 3, 6, -1, 25, 17, 15, 9, 10, 24, 30, 11, 5, 2, 22, 14, 20, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static const int successors_reversed[32][32] = {
  {6, 0, 8, -1, 2, 4, -1, 9, 5, 3, -1, 1, 14, 10, 13, 12, 15, 7, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, 0, 3, 12, 4, 6, -1, 1, 15, 5, -1, -1, -1, -1, 7, 10, 13, 11, -1, 2, 8, -1, 9, 14, -1, -1, -1, -1, -1, -1, -1},
  {3, 1, 7, 0, -1, 11, 4, 8, 5, -1, 2, 6, 13, 9, -1, -1, -1, 10, -1, -1, 14, -1, 12, 15, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 3, 5, -1, -1, 12, 2, 8, 1, 11, 4, 6, 9, 10, -1, 13, -1, 14, -1, -1, -1, 15, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, -1, -1, 11, 8, 3, 4, 6, 15, 2, 7, 9, 5, 14, -1, -1, 10, -1, 13, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {2, 0, 1, 3, -1, 6, 4, 8, 7, -1, 5, -1, -1, 9, -1, 13, -1, 14, -1, -1, -1, -1, 10, 12, 11, 15, -1, -1, -1, -1, -1, -1},
  {10, -1, 2, -1, 4, 1, -1, -1, 13, 0, 7, 8, -1, -1, 11, 6, 12, 5, -1, 9, -1, 14, -1, 3, 15, -1, -1, -1, -1, -1, -1, -1},
  {-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 2},
  {-1, 4, 1, -1, 6, 2, 7, -1, -1, 0, -1, 3, 10, -1, 8, 11, -1, 5, -1, 14, -1, 12, -1, 9, 13, 15, -1, -1, -1, -1, -1, -1},
  {3, 0, 4, -1, 1, 8, 7, 9, 10, 15, 5, -1, 13, 11, -1, -1, -1, 14, -1, 2, -1, -1, -1, 6, -1, 12, -1, -1, -1, -1, -1, -1},
  {-1, 2, 7, -1, 15, 10, -1, -1, -1, 1, 8, 3, -1, -1, 13, 5, 4, 9, -1, -1, 6, -1, 0, 12, 11, 14, -1, -1, -1, -1, -1, -1},
  {0, 1, 7, -1, 9, 5, 3, 10, 4, 11, 2, 12, 6, 8, -1, 15, -1, -1, -1, -1, -1, -1, 14, -1, -1, 13, -1, -1, -1, -1, -1, -1},
  {3, 0, 7, -1, 13, 5, 6, 2, 10, -1, 1, -1, -1, 4, -1, 12, -1, 8, -1, -1, 15, -1, -1, -1, 14, -1, -1, -1, -1, 9, -1, 11},
  {-1, 0, 8, -1, -1, -1, -1, 3, -1, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, 9, -1, -1, 1, 7, -1, -1, 2},
  {0, -1, -1, -1, -1, -1, 1, -1, 2, -1, 3, 6, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 2, -1, -1, -1, 9, 5, 10, 1, 14, 4, -1, 3, 8, -1, 12, -1, 15, -1, -1, -1, 11, 7, -1, 6, -1, -1, -1, -1, 13, -1, -1},
  {4, 0, 7, -1, -1, 13, 5, 10, 3, -1, 1, 2, 12, 11, -1, -1, 6, 9, -1, 15, -1, -1, 8, -1, -1, -1, -1, -1, -1, 14, -1, -1},
  {0, 2, 13, -1, 7, 12, 3, 11, 4, -1, 6, -1, 5, 14, -1, 8, 10, 1, -1, -1, -1, -1, 9, -1, -1, 15, -1, -1, -1, -1, -1, -1},
  {-1, 0, 1, -1, 14, 7, -1, 6, -1, 2, -1, 9, -1, 4, -1, 11, 3, -1, 8, -1, -1, -1, -1, -1, -1, -1, 10, 12, -1, 13, -1, 5},
  {2, 0, 14, 1, -1, 11, 6, 8, 4, 13, 3, 5, 15, 10, -1, -1, -1, 7, -1, 12, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {3, 5, -1, 1, 13, 9, 2, 7, 0, 6, 4, 8, 15, 10, -1, -1, -1, 11, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1},
  {0, 10, 9, -1, -1, 8, 7, 13, 4, -1, 3, 5, 6, 15, 12, 14, -1, 1, -1, -1, -1, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {10, 5, 1, -1, 14, 2, 9, -1, 13, 4, -1, 0, -1, 15, -1, 11, -1, 3, -1, 7, -1, 12, -1, 8, 6, -1, -1, -1, -1, -1, -1, -1},
  {2, 11, 4, 1, -1, 15, 8, 13, 3, -1, 0, 7, 12, -1, -1, -1, -1, 6, -1, -1, -1, -1, 9, 10, -1, 5, -1, -1, -1, -1, 14, -1},
  {0, 5, 10, 11, -1, 9, 7, 12, 2, -1, 1, 3, 13, 14, -1, -1, 15, 4, -1, -1, -1, -1, 8, -1, 6, -1, -1, -1, -1, -1, -1, -1},
  {0, 1, -1, -1, -1, 4, 3, 5, 8, 2, 13, -1, 10, 6, -1, 15, 9, 7, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, 14},
  {4, 6, -1, 0, -1, -1, 8, 11, 10, -1, 1, 9, -1, 12, -1, -1, -1, -1, 7, -1, 5, -1, 3, -1, -1, -1, -1, -1, 2, -1, -1, -1},
  {-1, 0, 5, 11, -1, -1, 7, -1, 8, -1, 15, -1, 9, -1, -1, 14, 12, -1, 1, -1, 10, 6, -1, -1, 13, -1, 2, -1, 4, -1, -1, 3},
  {1, 6, -1, -1, -1, -1, 3, -1, 2, -1, 0, -1, 9, 7, -1, -1, -1, -1, 5, -1, -1, -1, 4, -1, -1, -1, 8, -1, -1, -1, -1, -1},
  {-1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 2},
  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, 1, 2, -1, 11, 0, -1, -1, 10, -1, -1, 13, 8, -1, 7, 15, -1, 6, 3, -1, 14, -1, -1, 5, -1, -1, 4, 12, 9, -1, -1, -1}
};


typedef struct ALIGNED Pack {
  unsigned int bytes_packed;
  unsigned int bytes_unpacked;
  unsigned int header_bits;
  unsigned int lead_bits;
  unsigned int n_successors;
  unsigned const int successors_bits[7];
  unsigned const int offsets[9];
} Pack;

#define PACK_COUNT 3
#define MAX_SUCCESSOR_N 7

static const Pack packs[PACK_COUNT] = {
  { 1, 2, 2, 4, 1, { 2, 0, 0, 0, 0, 0, 0 }, { 30, 26, 24, 24, 24, 24, 24, 24, 24 } },
  { 2, 4, 3, 4, 3, { 3, 3, 3, 0, 0, 0, 0 }, { 29, 25, 22, 19, 16, 16, 16, 16, 16 } },
  { 4, 8, 4, 5, 7, { 4, 4, 4, 3, 3, 3, 2 }, { 28, 23, 19, 15, 11, 8, 5, 2, 0 } }
};

#endif
