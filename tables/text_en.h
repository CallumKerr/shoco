#ifdef _SHOCO_INTERNAL
/*
This file was generated by 'generate_successor_table.py',
so don't edit this by hand. Also, do not include this file
anywhere. It is internal to 'shoco.c'. Include 'shoco.h'
if you want to use shoco in your project.
*/

static const char chrs[32] = {
  ' ', 'e', 't', 'a', 'o', 'n', 'i', 'h', 's', 'r', 'd', 'l', 'u', 'm', 'c', 'w', 'y', 'f', 'g', ',', 'p', 'b', '.', 'v', 'k', 'I', '"', '-', 'H', 'M', 'T', '\''
};

static const int successors_indices[32][16] = {
  {2, 3, 7, 15, 8, 4, 6, 13, 21, 17, 14, 10, 0, 5, 11, 20},
  {0, 9, 5, 10, 8, 3, 11, 2, 1, 19, 13, 14, 23, 22, 16, 6},
  {7, 0, 4, 1, 6, 3, 2, 9, 19, 12, 22, 16, 11, 8, 15, 14},
  {5, 2, 8, 9, 11, 10, 0, 6, 16, 23, 13, 21, 14, 18, 20, 24},
  {12, 5, 0, 9, 17, 13, 2, 15, 4, 8, 11, 23, 10, 20, 24, 6},
  {0, 10, 18, 1, 2, 4, 14, 8, 6, 19, 3, 5, 16, 22, 11, 24},
  {5, 8, 2, 13, 4, 11, 14, 10, 9, 1, 18, 3, 17, 23, -1, 21},
  {1, 3, 6, 0, 4, 2, 19, 9, 12, 22, 16, -1, 13, 8, 11, 21},
  {0, 1, 2, 7, 6, 4, 8, 3, 12, 19, 22, 20, 14, 11, 15, 13},
  {1, 0, 6, 4, 3, 8, 16, 2, 22, 10, 19, 9, 5, 14, 13, 11},
  {0, 1, 6, 4, 19, 22, 3, 8, 16, 9, 12, 10, 11, -1, 27, 18},
  {1, 11, 6, 0, 16, 10, 4, 3, 17, 12, 19, 2, 8, 24, 22, 15},
  {9, 2, 11, 8, 5, 0, 18, 14, 20, 1, 6, 3, 10, 13, 21, 19},
  {1, 0, 3, 4, 6, 12, 20, 16, 8, 19, 22, 21, 13, -1, 17, -1},
  {4, 1, 7, 3, 2, 24, 6, 9, 11, 12, 16, 14, 0, -1, 22, 8},
  {3, 6, 7, 1, 4, 0, 5, 9, 19, 8, 11, 22, 10, -1, 27, 24},
  {0, 4, 19, 22, 1, 8, 2, 6, 10, -1, 31, -1, 11, -1, 21, 27},
  {0, 4, 1, 9, 3, 6, 17, 12, 2, 11, 19, 22, 27, 16, -1, -1},
  {0, 7, 1, 4, 3, 9, 6, 11, 19, 8, 22, 12, 5, 18, 27, 21},
  {0, 26, 31, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 9, 3, 4, 11, 20, 6, 0, 2, 12, 8, 7, 16, 19, 22, 21},
  {1, 11, 4, 12, 16, 3, 9, 6, 8, -1, 2, 21, 0, 23, 22, 7},
  {0, 26, 22, 31, 27, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 6, 3, 4, 16, 12, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, 5, 6, 8, 7, 19, 22, 11, 17, 16, 27, -1, 3, 15, -1},
  {0, 2, 5, 17, 8, 31, 19, 13, 25, -1, -1, -1, -1, -1, 22, -1},
  {0, 25, -1, -1, 30, -1, 29, 28, -1, -1, -1, -1, 2, -1, 3, 19},
  {27, 2, 3, 21, 8, 7, 14, 9, 0, 5, 15, 20, 13, 11, 10, 6},
  {1, 3, 4, 6, 12, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {9, 6, 16, 3, 1, 4, 12, -1, 0, 22, -1, -1, -1, -1, -1, -1},
  {7, 4, 1, -1, 6, 12, 9, 15, 3, 0, 28, 19, 22, 16, -1, -1},
  {8, 2, 0, 14, 11, 13, 3, 10, 9, 23, 30, -1, -1, 26, 19, 1}
};

static const int chrs_reversed[256] = {
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 26, -1, -1, -1, -1, 31, -1, -1, -1, -1, 19, 27, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, 25, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 21, 14, 10, 1, 17, 18, 7, 6, -1, 24, 11, 13, 5, 4, 20, -1, 9, 8, 2, 12, 23, 15, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static const int successors_reversed[32][32] = {
  {12, -1, 0, 1, 5, 13, 6, 2, 4, -1, 11, 14, -1, 7, 10, 3, -1, 9, -1, -1, 15, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 8, 7, 5, -1, 2, 15, -1, 4, 1, 3, 6, -1, 10, 11, -1, 14, -1, -1, 9, -1, -1, 13, 12, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 3, 6, 5, 2, -1, 4, 0, 13, 7, -1, 12, 9, -1, 15, 14, 11, -1, -1, 8, -1, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {6, -1, 1, -1, -1, 0, 7, -1, 2, 3, 5, 4, -1, 10, 12, -1, 8, -1, 13, -1, 14, 11, -1, 9, 15, -1, -1, -1, -1, -1, -1, -1},
  {2, -1, 6, -1, 8, 1, 15, -1, 9, 3, 12, 10, 0, 5, -1, 7, -1, 4, -1, -1, 13, -1, -1, 11, 14, -1, -1, -1, -1, -1, -1, -1},
  {0, 3, 4, 10, 5, 11, 8, -1, 7, -1, 1, 14, -1, -1, 6, -1, 12, -1, 2, 9, -1, -1, 13, -1, 15, -1, -1, -1, -1, -1, -1, -1},
  {-1, 9, 2, 11, 4, 0, -1, -1, 1, 8, 7, 5, -1, 3, 6, -1, -1, 12, 10, -1, -1, 15, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1},
  {3, 0, 5, 1, 4, -1, 2, -1, 13, 7, -1, 14, 8, 12, -1, -1, 10, -1, -1, 6, -1, 15, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 1, 2, 7, 5, -1, 4, 3, 6, -1, -1, 13, 8, 15, 12, 14, -1, -1, -1, 9, 11, -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, 7, 4, 3, 12, 2, -1, 5, 11, 9, 15, -1, 14, 13, -1, 6, -1, -1, 10, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 1, -1, 6, 3, -1, 2, -1, 7, 9, 11, 12, 10, -1, -1, -1, 8, -1, 15, 4, -1, -1, 5, -1, -1, -1, -1, 14, -1, -1, -1, -1},
  {3, 0, 11, 7, 6, -1, 2, -1, 12, -1, 5, 1, 9, -1, -1, 15, 4, 8, -1, 10, -1, -1, 14, -1, 13, -1, -1, -1, -1, -1, -1, -1},
  {5, 9, 1, 11, -1, 4, 10, -1, 3, 0, 12, 2, -1, 13, 7, -1, -1, -1, 6, 15, 8, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, -1, 2, 3, -1, 4, -1, 8, -1, -1, -1, 5, 12, -1, -1, 7, 14, -1, 9, 6, 11, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {12, 1, 4, 3, 0, -1, 6, 2, 15, 7, -1, 8, 9, -1, 11, -1, 10, -1, -1, -1, -1, -1, 14, -1, 5, -1, -1, -1, -1, -1, -1, -1},
  {5, 3, -1, 0, 4, 6, 1, 2, 9, 7, 12, 10, -1, -1, -1, -1, -1, -1, -1, 8, -1, -1, 11, -1, 15, -1, -1, 14, -1, -1, -1, -1},
  {0, 4, 6, -1, 1, -1, 7, -1, 5, -1, 8, 12, -1, -1, -1, -1, -1, -1, -1, 2, -1, 14, 3, -1, -1, -1, -1, 15, -1, -1, -1, 10},
  {0, 2, 8, 4, 1, -1, 5, -1, -1, 3, -1, 9, 7, -1, -1, -1, 13, 6, -1, 10, -1, -1, 11, -1, -1, -1, -1, 12, -1, -1, -1, -1},
  {0, 2, -1, 4, 3, 12, 6, 1, 9, 5, -1, 7, 11, -1, -1, -1, -1, -1, 13, 8, -1, 15, 10, -1, -1, -1, -1, 14, -1, -1, -1, -1},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 3, -1, -1, -1, 2},
  {7, 0, 8, 2, 3, -1, 6, 11, 10, 1, -1, 4, 9, -1, -1, -1, 12, -1, -1, 13, 5, 15, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {12, 0, 10, 5, 2, -1, 7, 15, 8, 6, -1, 1, 3, -1, -1, -1, 4, -1, -1, -1, -1, 11, 14, 13, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1, 2, -1, -1, -1, 1, 4, -1, -1, -1, 3},
  {-1, 0, -1, 2, 3, -1, 1, -1, -1, 6, -1, -1, 5, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, -1, 13, -1, 2, 3, 5, 4, -1, -1, 8, -1, -1, -1, 14, 10, 9, -1, 6, -1, -1, 7, -1, -1, -1, -1, 11, -1, -1, -1, -1},
  {0, -1, 1, -1, -1, 2, -1, -1, 4, -1, -1, -1, -1, 7, -1, -1, -1, 3, -1, 6, -1, -1, 14, -1, -1, 8, -1, -1, -1, -1, -1, 5},
  {0, -1, 12, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, 1, -1, -1, 7, 6, 4, -1},
  {8, -1, 1, 2, -1, 9, 15, 5, 4, 7, 14, 13, -1, 12, 6, 10, -1, -1, -1, -1, 11, 3, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1},
  {-1, 0, -1, 1, 2, -1, 3, -1, -1, -1, -1, -1, 4, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {8, 4, -1, 3, 5, -1, 1, -1, -1, 0, -1, -1, 6, -1, -1, -1, 2, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {9, 2, -1, 8, 1, -1, 4, 0, -1, 6, -1, -1, 5, -1, -1, 7, 13, -1, -1, 11, -1, -1, 12, -1, -1, -1, -1, -1, 10, -1, -1, -1},
  {2, 15, 1, 6, -1, -1, -1, -1, 0, 8, 7, 4, -1, 5, 3, -1, -1, -1, -1, 14, -1, -1, -1, 9, -1, -1, 13, -1, -1, -1, 10, -1}
};


typedef struct Pack {
  uint32_t word;
  unsigned int bytes_packed;
  unsigned int bytes_unpacked;
  unsigned const int offsets[8];
  const int16_t _ALIGNED masks[8];
  char header_mask;
  char header;
} Pack;

#define PACK_COUNT 3
#define MAX_SUCCESSOR_N 7

static const Pack packs[PACK_COUNT] = {
  { 0x80000000, 1, 2, { 26, 24, 24, 24, 24, 24, 24, 24 }, { 15, 3, 0, 0, 0, 0, 0, 0 }, 0xc0, 0x80 },
  { 0xc0000000, 2, 4, { 25, 22, 19, 16, 16, 16, 16, 16 }, { 15, 7, 7, 7, 0, 0, 0, 0 }, 0xe0, 0xc0 },
  { 0xe0000000, 4, 8, { 23, 19, 15, 11, 8, 5, 2, 0 }, { 31, 15, 15, 15, 7, 7, 7, 3 }, 0xf0, 0xe0 }
};

#endif
